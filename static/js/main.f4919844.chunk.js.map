{"version":3,"sources":["imagenes/penguin.png","components/navigation/Navigation.js","components/logo/Logo.js","components/imageLinkForm/ImageLinkForm.js","components/rank/Rank.js","components/faceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","style","display","justifyContent","className","Logo","options","max","height","width","src","penguin","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","onClick","Rank","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","calculateFaceLocation","data","face","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","heigth","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","error","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4919844.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/penguin.a66bb096.png\";","import React from \"react\";\n\nconst Navigation = () => {\n    return (\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n          <p className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n      </nav>\n    );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport './Logo.css';\nimport penguin from '../../imagenes/penguin.png';\n\nconst Logo = () => {\n    return(\n        <div className='ma4 mt0'>\n            <Tilt className='Tilt br2 shadow-2' options={{max: 55}} style={{ height: 150, width: 150}}>\n                <div className='Tilt-inner'>\n                    <img src={penguin} alt='Logo'/>\n                </div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo;\n","import React from \"react\";\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <p className='f3'>\n                {'This Magic Brain will detect faces in you pictures. git it a try.'}\n            </p>\n            <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detectar</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ImageLinkForm;\n","import React from \"react\";\nimport './Rank.css';\n\nconst Rank = () => {\n    return (\n        <div>\n            <div className='white f3'>\n                {'Carlos, your current rank is...'}\n            </div>\n            <div className='white f1'>\n                {'#5'}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;\n","import React from \"react\";\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, box}) => {\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2'>\n                <img src={imageUrl} alt='' width='500px' height='auto' id='inputImage'/>\n                <div className='bounding-box'\n                     style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default FaceRecognition;\n","import React, {Component} from 'react';\nimport Navigation from \"./components/navigation/Navigation\";\nimport Logo from \"./components/logo/Logo\";\nimport ImageLinkForm from \"./components/imageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/rank/Rank\";\nimport FaceRecognition from \"./components/faceRecognition/FaceRecognition\";\n\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nimport 'tachyons';\nimport './App.css';\n\nconst app = new Clarifai.App({\n    apiKey: '0b7114a2ee434c1c87ee41d9ab57b7c0'\n});\n\nconst particlesOptions = {\n    particles: {\n        number: {\n            value: 150,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        }\n    }\n}\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            input: '',\n            imageUrl: '',\n            box: {}\n        }\n    }\n\n    calculateFaceLocation = (data) => {\n        const face = data.outputs[0].data.regions[0].region_info.bounding_box;\n        const image = document.getElementById('inputImage');\n        const width = Number(image.width);\n        const heigth = Number(image.height);\n        return {\n            leftCol: face.left_col * width,\n            topRow: face.top_row * heigth,\n            rightCol: width - (face.right_col * width),\n            bottomRow: heigth - (face.bottom_row * heigth)\n        }\n    }\n\n    displayFaceBox = (box) => {\n        this.setState({box: box})\n    }\n\n    onInputChange = (event) => {\n        this.setState({input: event.target.value})\n    }\n\n    onButtonSubmit = () => {\n        this.setState({imageUrl: this.state.input});\n        app.models.predict(\n            Clarifai.FACE_DETECT_MODEL,\n            this.state.input)\n            .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n            .catch(err => console.error(err));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Particles className='particles' params={particlesOptions}/>\n                <Navigation />\n                <Logo/>\n                <Rank/>\n                <ImageLinkForm\n                    onInputChange={this.onInputChange}\n                    onButtonSubmit={this.onButtonSubmit}\n                />\n                <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}